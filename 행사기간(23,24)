import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt
import seaborn as sns

# ======================================================================================
# 0. 한글 폰트 설정 (로컬 환경에 맞게 경로 수정 필요)
# ======================================================================================
try:
    import matplotlib.font_manager as fm
    # Windows 사용자의 경우: 'malgun.ttf'는 맑은 고딕 폰트입니다.
    font_path = 'C:/Windows/Fonts/malgun.ttf'
    if not os.path.exists(font_path):
        # macOS 사용자의 경우
        font_path = '/System/Library/Fonts/AppleSDGothicNeo.ttc'
    font_name = fm.FontProperties(fname=font_path).get_name()
    plt.rc('font', family=font_name)
    plt.rcParams['axes.unicode_minus'] = False # 마이너스 폰트 깨짐 방지
except (FileNotFoundError, ImportError):
    print("한글 글꼴 파일을 찾을 수 없어 기본 글꼴로 실행됩니다. 그래프의 한글이 깨질 수 있습니다.")
    pass

# ======================================================================================
# 1. 데이터 로드 및 전처리
# ======================================================================================
DATA_DIR = "./data"
print("미래 이벤트 예측을 위해 'marketing_spend.csv' 파일을 분석합니다.")
try:
    marketing_df = pd.read_csv(os.path.join(DATA_DIR, 'marketing_spend.csv'))
except FileNotFoundError:
    print(f"오류: '{os.path.join(DATA_DIR, 'marketing_spend.csv')}' 파일을 찾을 수 없습니다.")
    exit()

marketing_df['date'] = pd.to_datetime(marketing_df['date'])
marketing_df['year'] = marketing_df['date'].dt.year
marketing_df['month'] = marketing_df['date'].dt.month

# 2023년과 2024년의 마케팅 계획 데이터만 필터링
future_marketing_df = marketing_df[marketing_df['year'].isin([2023, 2024])].copy()

# ======================================================================================
# 2. 연도별/국가별 월간 마케팅 비용 집계 및 분석
# ======================================================================================
monthly_spend = future_marketing_df.groupby(['year', 'country', 'month'])['spend_usd'].sum().reset_index()

print("\n" + "="*60)
print("✅ 2023-2024년 마케팅 비용 분석 기반 이벤트 예측 결과")
print("="*60)

results = {}
for year in [2023, 2024]:
    yearly_data = monthly_spend[monthly_spend['year'] == year]
    
    # 해당 연도에 가장 많은 마케팅 비용을 지출한 월과 국가 탐색
    best_candidate = yearly_data.loc[yearly_data['spend_usd'].idxmax()]
    results[year] = best_candidate
    
    country = best_candidate['country']
    month = int(best_candidate['month'])
    spend = best_candidate['spend_usd']
    
    # 과거 패턴(주로 1달 이상)을 고려하여 이벤트 기간 설정
    # 예: 해당 월의 15일 전부터 30일 후까지 (약 1.5개월)
    start_date = pd.to_datetime(f'{year}-{month}-01') + pd.Timedelta(days=-15)
    end_date = start_date + pd.Timedelta(days=45)

    print(f"\n[ {year}년 가장 유력한 이벤트 후보 ]")
    print(f"  - 국가: {country}")
    print(f"  - 핵심 월: {month}월 (해당 월 지출액: ${spend:,.0f})")
    print(f"  ▶️ 추천 예측 기간: '{start_date.date()}' ~ '{end_date.date()}'")

# ======================================================================================
# 3. 시각화로 결과 확인
# ======================================================================================
candidate_countries = [res['country'] for res in results.values()]

for year in [2023, 2024]:
    plt.figure(figsize=(14, 6))
    
    # 분석에 사용된 모든 국가의 데이터를 배경으로 연하게 표시
    sns.lineplot(
        data=monthly_spend[monthly_spend['year'] == year],
        x='month', y='spend_usd', hue='country',
        palette='Greys', legend=False, alpha=0.3
    )
    
    # 가장 유력한 후보 국가의 데이터만 강조하여 표시
    sns.lineplot(
        data=monthly_spend[(monthly_spend['year'] == year) & (monthly_spend['country'] == results[year]['country'])],
        x='month', y='spend_usd', color='red', linewidth=3,
        marker='o', markersize=8, label=f"가장 유력한 후보: {results[year]['country']}"
    )
    
    plt.title(f'{year}년 국가별 월간 마케팅 비용 계획', fontsize=16)
    plt.xlabel('월(Month)', fontsize=12)
    plt.ylabel('마케팅 지출액 (USD)', fontsize=12)
    plt.grid(True, which='both', linestyle='--', linewidth=0.5)
    plt.xticks(range(1, 13))
    plt.legend()
    plt.tight_layout()
    plt.show()
